!function(){function e(){var e={restrict:"EA",template:'<div class="panel panel-default"> <div class="panel-heading"> <div class="row"> <div class="col-xs-6"> <div class="form-group"> <input type="text" ng-model="vm.titleFilter" class="form-control" placeholder="Search items..."><button type="button" ng-click="vm.titleFilter=\'\'" class="btn-reset"><i class="fa fa-times-circle text-muted"></i></button> </div> </div> <div class="col-xs-6"> <div class="checkbox"> <label> <input type="checkbox" ng-click="vm.showSelected()">Selected only </label> </div> </div> </div> </div> <div class="panel-body" ng-if="vm.loading || vm.errors"> <div ng-if="vm.loading" class="text-center"> <i class="fa fa-refresh fa-spin fa-2x"></i> <p>Loading items</p> </div> <div ng-if="vm.errors" class="alert alert-warning text-center"> <i class="fa fa-warning"></i> {{vm.errors}} </div> </div> <ul class="list-group list-striped list-hover panel-filter-list"> <li ng-click="vm.toggleSelected(item.id)" class="list-group-item" ng-class="{\'selected\': vm.isSelected(item.id)}" ng-repeat="item in vm.currentItems | filter:vm.titleFilter | orderBy:\'title\'"> <i ng-if="!vm.isSelected(item.id)" class="fa fa-circle-thin"></i> <i ng-if="vm.isSelected(item.id)" class="fa fa-check"></i> {{item.title}} </li> </ul> <input type="hidden" name="{{vm.fieldAs}}" value="{{vm.selectedItems.toString()}}"><div class="panel-footer"> <div class="label label-default">{{vm.items.length}} total items</div> <div ng-if="vm.selectedItems.length" class="label label-success">{{vm.selectedItems.length}} selected items</div></div> </div>',scope:{url:"@",titleAs:"@",fieldAs:"@",value:"@"},controller:t,controllerAs:"vm",bindToController:!0,replace:!0};return e}function t(e){function t(){return i().then(function(){r.loading=!1,r.items.length<1&&(r.errors="There are no items to display."),r.fieldAs||(r.fieldAs="selected_items"),r.value&&(r.selectedItems=JSON.parse("["+r.value+"]"))})}function i(){return e.getItems(r.url).then(function(e){return l(e)})}function l(e){if(r.titleAs){angular.forEach(e,function(e){Object.defineProperty(e,"title",Object.getOwnPropertyDescriptor(e,r.titleAs)),delete e[r.titleAs]})}return r.items=r.currentItems=e,r.items}function s(e){r.isSelected(e)?r.selectedItems.splice(r.isSelected(e)-1,1):r.selectedItems.push(e)}function c(e){return r.selectedItems.indexOf(e)+1}function n(){r.showSelectedStatus?r.currentItems=r.items:(r.currentItems=[],angular.forEach(r.items,function(e){r.isSelected(e.id)&&r.currentItems.push(e)})),r.titleFilter="",r.showSelectedStatus=!r.showSelectedStatus}var r=this;r.loading=!0,r.errors=null,r.selectedItems=r.items=r.currentItems=[],r.toggleSelected=s,r.showSelected=n,r.showSelectedStatus=!1,r.isSelected=c,t()}function i(e){function t(t){function i(e){return e.data}function l(e){console.log("XHR Failed for getItems."+e.data)}return e.get(t).then(i)["catch"](l)}return{getItems:t}}angular.module("sift",[]).factory("DataService",i).directive("siftPanel",e),t.$inject=["DataService"],i.$inject=["$http"]}();